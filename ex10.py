# 习题十
# 习题九的练习里面有些奇怪的东西 """ 三引号和 \n 转义字符。
# 三引号前面有说过了，本题则主要练习转义字符。

# 转义字符
# python 中有一些字符、字符组合有特殊的意义，比如说反斜杠和字母 n 组合： \n 。
# 你也许猜出来了它的特殊意义是表示换行。
# 因为这些字符需要表达的已经不在是原来的意义，所有人们称其为“转义字符”。
# 又例如我们想在一段字符串中同时使用单引号和双引号就可以为引号前加上反斜杠，
# 把“定义字符串”的意义转义为“字符中的标点符号”这个意义
# （这是一个把特殊意义转义为字符的例子，而 \n 是把 n 的字符转义为特殊意义。
# 不过站在 python 的角度把引号变为字符才更特殊。）

# 失败的例子（可以去掉注释尝试一下）
# print("python 使用双引号 " 或单引号 ' 来定义一段字符串")

# 正确的例子
print("python 使用双引号 \" 或单引号 \' 来定义一段字符串")

tabby_cat = "\tI'm tabbed in."
persian_cat = "I'm split\non a line."
backslash_cat = "I'm \\ a \\ cat."

# 单引号和双引号是一样的。
fat_cat = '''
I'll do a list:
\t* Cat food
\t* Fishies
\t* Catnip\n\t* Grass
'''

print(tabby_cat)
print(persian_cat)
print(backslash_cat)
print(fat_cat)

# \n	     ASCII 换行符
# \\	     反斜杠（ \ )
# \' 和 \"	表示引号（ ' 和 "）
# \（在行末） 不换行
# \t	     ASCII 横向制表符
# \v	     ASCII 纵向制表符
# \a	     ASCII 响铃
# \b	     ASCII 退格(将后面的字符前移)
# \e	     转义 官网上没有这个东西，不知道众网友都哪来的
# \000	     空（但不是空格）
# \r	     ASCII 回车（效果类似 \b 但是看起是光标退掉整行内容，移动到了本行开头位置后输出后面的内容）
# \f	     换页(据说在有些终端会清空屏幕）
# \ooo	     八进字符，ooo代表的字符的值，例如：\044是美元符$
# \xhh	     十六进制字符，hh代表的字符的值，例如：\x44是大写D

# 转义字符演示
# r''是原始字符串，和 %r 有点像，用于保持原始数据不会转义字符

print(r"\n 【换行】演示：", "\n第一行\n第二行")
print(" " * 20)
print(r"\\ 【反斜杠】演示：", "\n一个反斜杠: \\")
print(" " * 20)
print(r"\' 和\" 【引号】演示：", "\n英语双语号：\", 英语单引号：\'")
print(" " * 20)
print(r"行末\ 【不换行】演示：", "\n我不想\
换行")
print(" " * 20)
print(r"\t 【横向制表符】演示：", "\n\t横向制表符")
print(" " * 20)
print(r"\t 深入介绍：表示后退一个制表符相当于按一下Tab键或者是按八下空格键", "\nd\tsssss\tsssssssssss\t")
print("这是从左向右数八个字符 不足八个补空格")
print(" " * 20)
print(r"\v 【纵向制表符】演示：", "\n垂直\v制表符")
# 垂直制表符不常用。它的作用是让‘\v’后面的字符从下一行开始输出，且开始的列数为“\v”前一个字符所在列后面一列。
# 这个转义字符只有在打印机中才能显示出来，显示屏不起作用的
print(" " * 20)
print(r"\a 【响铃】演示：", "\n打开音响哦\a")
print(" " * 20)
print(r"\b 【退格】演示：", "\n退格键\b(后面要有东西才能退格)")
print(" " * 20)
print(r"\000 【空】演示：", "\n--\000--", ' ' == '\000')  # 验证和空格是否相等 False
# 双等号“==”在 python 中是一个布尔表达式，用来判断两边的内容是否相同，如果相同则返回 “True” 否则返回 “False”
print(" " * 20)
print(r"\r 【回车】演示：", "\naaa\r6666\r2333")
# 为什么最后结果只剩下2333？
# 首先，换行，打印了“aaa”这段内容，然后遇到转义字符“\r”它把光标退到了第一个 a 的前面，输出了“6666”，
# 然后又退到第一个 6 的前面，输出了“2333”，由于前面的字符都被覆盖掉了，所以只剩下 “2333” 了
print(" " * 20)
print(r"\f 【翻页】演示：", "\n翻页\f翻页后")
# 这个转义字符只有在打印机中才能显示出来，显示屏不起作用的
print(" " * 20)
print(r"\ooo 【八进字符】演示：", "\n\044是美元符")
# \*** 用3个8进制数表示一个字符
# 其实前面的 \000 = NULL 用的就是 8进制的转义格式
print(r"\xhh 【十六进字符】演示：", "\n\x44是大写D")
